From 2947e1f60edff865f014b942dea333633029bdf8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Storsj=C3=B6?= <martin@martin.st>
Date: Fri, 8 May 2020 15:29:43 +0300
Subject: [PATCH 6/8] Ignore encoded packets with an unrecognized pkt.pts

The Qualcomm HEVC MediaFoundation encoder produces a final extra
packet at the end with a "future" pts when using b-frames; just
ignore this packet as we can't map the timestamp back. As this
only happens for the final packet it shouldn't matter.
---
 libhb/encavcodec.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/libhb/encavcodec.c b/libhb/encavcodec.c
index cf4d26816..4c12df4dd 100644
--- a/libhb/encavcodec.c
+++ b/libhb/encavcodec.c
@@ -42,6 +42,7 @@ struct hb_work_private_s
     struct {
         int64_t          start;
         int64_t          duration;
+        int64_t          num;
     } frame_info[FRAME_INFO_SIZE];
 
     hb_chapter_queue_t * chapter_queue;
@@ -802,6 +803,13 @@ static void save_frame_info( hb_work_private_t * pv, hb_buffer_t * in )
     int i = pv->frameno_in & FRAME_INFO_MASK;
     pv->frame_info[i].start = in->s.start;
     pv->frame_info[i].duration = in->s.stop - in->s.start;
+    pv->frame_info[i].num = pv->frameno_in;
+}
+
+static int has_frame_info( hb_work_private_t * pv, int64_t frameno )
+{
+    int i = frameno & FRAME_INFO_MASK;
+    return pv->frame_info[i].num == frameno;
 }
 
 static int64_t get_frame_start( hb_work_private_t * pv, int64_t frameno )
@@ -902,6 +910,12 @@ static void get_packets( hb_work_object_t * w, hb_buffer_list_t * list )
         {
             hb_log("encavcodec: avcodec_receive_packet failed");
         }
+        if (!has_frame_info(pv, pkt.pts))
+        {
+            hb_log("encavcodec: skipping packet with unrecognized pts %lld", pkt.pts);
+            av_packet_unref(&pkt);
+            continue;
+        }
 
         out = hb_buffer_init(pkt.size);
         memcpy(out->data, pkt.data, out->size);
-- 
2.17.1

